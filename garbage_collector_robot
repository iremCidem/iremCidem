•	#include<Servo.h>
•	#include <Adafruit_TCS34725.h>

•	#define echoPin 8 
•	#define trigPin 2
•	#define MotorR1 6
•	#define MotorR2 7
•	#define MotorRE 9  
•	#define MotorL1 4
•	#define MotorL2 5
•	#define MotorLE 3

•	Servo servo_1;
•	Servo servo_2;
•	int renk=0;

•	long sure, uzaklik; 

•	void setup() {

•	servo_1.attach(11, 500, 2500);
•	servo_2.attach(10, 500, 2500);

•	pinMode(echoPin, INPUT);
•	pinMode(trigPin, OUTPUT);
•	pinMode(MotorL1, OUTPUT);
•	pinMode(MotorL2, OUTPUT);
•	pinMode(MotorLE, OUTPUT); 
•	pinMode(MotorR1, OUTPUT);
•	pinMode(MotorR2, OUTPUT);
•	pinMode(MotorRE, OUTPUT);


•	Adafruit_TCS34725 
•	tcs=Adafruit_TCS34725(TCS34725_INTEGRATIONTIME_50MS, TCS34725_GAIN_1X);
•	Serial.begin(9600);
•	}

•	void loop() {

•	digitalWrite(trigPin, LOW); 
•	delayMicroseconds(5);
•	digitalWrite(trigPin, HIGH); 
•	delayMicroseconds(10);
•	digitalWrite(trigPin, LOW); 

•	sure = pulseIn(echoPin, HIGH); 
•	uzaklik = sure / 29.1 / 2; 
•	Serial.println(uzaklik);
•	Serial.println(sure);

•	if (analogRead(A0) < 900 ) 
•	{
  bak();
•	delay(150);
•	loop();
•	} 

•	else
•	{
•	cizgi();
•	renk_oku ();
•	delay(150);

•	loop();

•	}
•	}
•	}

•	void ileri(){  
•	digitalWrite(MotorR1, HIGH); // Sağ motorun ileri hareketi aktif
•	digitalWrite(MotorR2, LOW); // Sağ motorun geri hareketi pasif
•	analogWrite(MotorRE, 150); // Sağ motorun hızı 150

•	digitalWrite(MotorL1, HIGH); // Sol motorun ileri hareketi aktif
•	digitalWrite(MotorL2, LOW); // Sol motorun geri hareketi pasif
•	analogWrite(MotorLE, 150); // Sol motorun hızı 150   
•	}

•	void dur(){ 
•	digitalWrite(MotorR1, LOW); // Sağ motorun ileri hareketi pasif
•	digitalWrite(MotorR2, LOW); // Sağ motorun geri hareketi aktif
•	analogWrite(MotorRE, 0); // Sağ motorun hızı 150

•	digitalWrite(MotorL1, LOW); // Sol motorun ileri hareketi pasif
•	digitalWrite(MotorL2, LOW); // Sol motorun geri hareketi aktif
•	analogWrite(MotorLE, 0); // Sol motorun hızı 15
•	}
•	void bak () { 
•	if (uzaklik < 15) // engel var
•	{
•	dur();
• renk oku();
•	}   

•	else {
•	ileri();
•	}
•	}

•	void servo_al () {
•	servo_1.write(180);
•	delay(3000); // Wait for 3000 millisecond(s)
•	servo_2.write(0);
•	delay(3000); // Wait for 3000 millisecond(s)
•	servo_1.write(0);
•	delay(3000); // Wait for 3000 millisecond(s)
•	servo_2.write(180);
•	delay(3000); // Wait for 3000 millisecond(s)
•	}

•	void servo_sabit (){
•	servo_1.write(0);
•	delay(3000); // Wait for 3000 millisecond(s)
•	servo_2.write(180);
•	delay(3000); // Wait for 3000 millisecond(s)
•	}


•	void cizgi() {
•	digitalWrite(MotorR1, HIGH);
•	digitalWrite(MotorR2, LOW);
•	digitalWrite(MotorL1, HIGH);
•	digitalWrite(MotorL2, LOW);
•	delay(75);
•	digitalWrite(MotorR1, LOW);
•	digitalWrite(MotorR2, LOW);
•	digitalWrite(MotorL1, LOW);
•	digitalWrite(MotorL2, LOW);
•	delay(600);
•	digitalWrite(MotorR1, HIGH);
•	digitalWrite(MotorR2, LOW);
•	digitalWrite(MotorL1, LOW);
•	digitalWrite(MotorL2, HIGH);
•	delay(580);
•	digitalWrite(MotorR1, LOW);
•	digitalWrite(MotorR2, LOW);
•	digitalWrite(MotorL1, LOW);
•	digitalWrite(MotorL2, LOW);
•	delay(600);
•	}

•	void renk_oku() {
•	uint16_t  red, green, blue;
•	float average, k, y, m;
•	average = (red+green+blue)/3;
•	k = red/average;
•	y = green/average;
•	m = blue/average;
•	Serial.print("Kirmzi: "); Serial.println(k);
•	Serial.print("Yesil: "); Serial.println(y);
•	Serial.print("Mavi: "); Serial.println(m); 
•	delay(50);

•	if((k>1.8)&&(y<0.75)&&(m<0.48)){
•	Serial.println("Kirmizi ");
•	renk = 1;
•	servo_sabit ();
ileri ();
•	}

•	if((k<1.05)&&(y>1.28)&&(m<0.9)){
•	Serial.println("Yesil ");
•	renk = 2;
•	servo_sabit ();
ileri();
•	}

•	if((k<0.9)&&(y<1.22)&&(m>0.9)){
•	Serial.println("Mavi ");
•	renk = 3;
•	servo_sabit ();
ileri();
•	}

•	if((k>1.4)&&(y>1.09)&&(m<0.5)){
•	Serial.println("Sari ");
•	renk = 4;
•	servo_al ();
ileri();
•	}
•	return renk;
•	}


